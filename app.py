import pandas as pd
from pymongo import MongoClient


def aggregate_salary_data(dt_from, dt_upto, group_type):
    # Подключение к MongoDB
    client = MongoClient('localhost', 27017)

    db = client['sampleDB']
    collection = db['sample_collection']

    dt_from = pd.to_datetime(dt_from)
    dt_upto = pd.to_datetime(dt_upto)

    # агрегация по месяцам
    if group_type == 'month':
        aggregated_data = collection.aggregate([
            {'$match': {'$and': [{'dt': {'$gte': dt_from}}, {'dt': {'$lte': dt_upto}}]}},
            {'$group': {'_id': {'$dateToString': {'format': '%Y-%m', 'date': '$dt'}}, 'total_salary': {'$sum': '$value'}}},
            {'$sort': {'_id': 1}}
        ])

        dataset = []
        labels = []

        for doc in aggregated_data:
            dataset.append(doc['total_salary'])
            labels.append(doc['_id'] + '-01T00:00:00')

        return {'dataset': dataset, 'labels': labels}

    # агрегация по дням
    elif group_type == 'day':
        date_range = pd.date_range(start=dt_from, end=dt_upto, freq='D')

        aggregated_data = []

        for date in date_range:
            
            data_for_day = collection.aggregate([
                {'$match': {'dt': {'$gte': date, '$lt': date + pd.Timedelta(days=1)}}},
                {'$group': {'_id': None, 'total_salary': {'$sum': '$value'}}}
            ])

            total_salary = next(data_for_day, {'total_salary': 0})['total_salary']
            aggregated_data.append(total_salary)

        labels = date_range.strftime('%Y-%m-%dT%H:%M:%S').tolist()
        return {'dataset': aggregated_data, 'labels': labels}
    
    else:
        raise ValueError('Неподдерживаемый тип агрегации')



# Пример запроса на агрегацию данных
input_data = {
   "dt_from": "2022-10-01T00:00:00",
   "dt_upto": "2022-11-30T23:59:00",
   "group_type": "day"
}


result = aggregate_salary_data(input_data['dt_from'], input_data['dt_upto'], input_data['group_type'])
print(result)

# проверка соотвествия предоставленным данным
# x = {"dataset": [0, 0, 0, 195028, 190610, 193448, 203057, 208605, 191361, 186224, 181561, 195264, 213854, 194070,
#             208372, 184966, 196745, 185221, 196197, 200647, 196755, 221695, 189114, 204853, 194652, 188096, 215141,
#             185000, 206936, 200164, 188238, 195279, 191601, 201722, 207361, 184391, 203336, 205045, 202717, 182251,
#             185631, 186703, 193604, 204879, 201341, 202654, 183856, 207001, 204274, 204119, 188486, 191392, 184199,
#             202045, 193454, 198738, 205226, 188764, 191233, 193167, 205334],
# "labels": ["2022-10-01T00:00:00", "2022-10-02T00:00:00", "2022-10-03T00:00:00", "2022-10-04T00:00:00",
#            "2022-10-05T00:00:00", "2022-10-06T00:00:00", "2022-10-07T00:00:00", "2022-10-08T00:00:00",
#            "2022-10-09T00:00:00", "2022-10-10T00:00:00", "2022-10-11T00:00:00", "2022-10-12T00:00:00",
#            "2022-10-13T00:00:00", "2022-10-14T00:00:00", "2022-10-15T00:00:00", "2022-10-16T00:00:00",
#            "2022-10-17T00:00:00", "2022-10-18T00:00:00", "2022-10-19T00:00:00", "2022-10-20T00:00:00",
#            "2022-10-21T00:00:00", "2022-10-22T00:00:00", "2022-10-23T00:00:00", "2022-10-24T00:00:00",
#            "2022-10-25T00:00:00", "2022-10-26T00:00:00", "2022-10-27T00:00:00", "2022-10-28T00:00:00",
#            "2022-10-29T00:00:00", "2022-10-30T00:00:00", "2022-10-31T00:00:00", "2022-11-01T00:00:00",
#            "2022-11-02T00:00:00", "2022-11-03T00:00:00", "2022-11-04T00:00:00", "2022-11-05T00:00:00",
#            "2022-11-06T00:00:00", "2022-11-07T00:00:00", "2022-11-08T00:00:00", "2022-11-09T00:00:00",
#            "2022-11-10T00:00:00", "2022-11-11T00:00:00", "2022-11-12T00:00:00", "2022-11-13T00:00:00",
#            "2022-11-14T00:00:00", "2022-11-15T00:00:00", "2022-11-16T00:00:00", "2022-11-17T00:00:00",
#            "2022-11-18T00:00:00", "2022-11-19T00:00:00", "2022-11-20T00:00:00", "2022-11-21T00:00:00",
#            "2022-11-22T00:00:00", "2022-11-23T00:00:00", "2022-11-24T00:00:00", "2022-11-25T00:00:00",
#            "2022-11-26T00:00:00", "2022-11-27T00:00:00", "2022-11-28T00:00:00", "2022-11-29T00:00:00",
#            "2022-11-30T00:00:00"]}
# y = {'dataset': [0, 0, 0, 195028, 190610, 193448, 203057, 208605, 191361, 186224, 181561, 195264, 213854, 194070, 208372, 184966, 196745, 185221, 196197, 200647, 196755, 221695, 189114, 204853, 194652, 188096, 215141, 185000, 206936, 200164, 188238, 195279, 191601, 201722, 207361, 184391, 203336, 205045, 202717, 182251, 185631, 186703, 193604, 204879, 201341, 202654, 183856, 207001, 204274, 204119, 188486, 191392, 184199, 202045, 193454, 198738, 205226, 188764, 191233, 193167, 205334], 'labels': ['2022-10-01T00:00:00', '2022-10-02T00:00:00', '2022-10-03T00:00:00', 
# '2022-10-04T00:00:00', '2022-10-05T00:00:00', '2022-10-06T00:00:00', '2022-10-07T00:00:00', '2022-10-08T00:00:00', '2022-10-09T00:00:00', '2022-10-10T00:00:00', '2022-10-11T00:00:00', '2022-10-12T00:00:00', '2022-10-13T00:00:00', '2022-10-14T00:00:00', '2022-10-15T00:00:00', '2022-10-16T00:00:00', '2022-10-17T00:00:00', '2022-10-18T00:00:00', '2022-10-19T00:00:00', '2022-10-20T00:00:00', '2022-10-21T00:00:00', '2022-10-22T00:00:00', '2022-10-23T00:00:00', '2022-10-24T00:00:00', '2022-10-25T00:00:00', '2022-10-26T00:00:00', '2022-10-27T00:00:00', '2022-10-28T00:00:00', '2022-10-29T00:00:00', '2022-10-30T00:00:00', '2022-10-31T00:00:00', '2022-11-01T00:00:00', '2022-11-02T00:00:00', '2022-11-03T00:00:00', '2022-11-04T00:00:00', '2022-11-05T00:00:00', '2022-11-06T00:00:00', '2022-11-07T00:00:00', '2022-11-08T00:00:00', '2022-11-09T00:00:00', '2022-11-10T00:00:00', '2022-11-11T00:00:00', '2022-11-12T00:00:00', '2022-11-13T00:00:00', '2022-11-14T00:00:00', '2022-11-15T00:00:00', '2022-11-16T00:00:00', '2022-11-17T00:00:00', '2022-11-18T00:00:00', '2022-11-19T00:00:00', '2022-11-20T00:00:00', '2022-11-21T00:00:00', '2022-11-22T00:00:00', '2022-11-23T00:00:00', '2022-11-24T00:00:00', '2022-11-25T00:00:00', '2022-11-26T00:00:00', '2022-11-27T00:00:00', '2022-11-28T00:00:00', '2022-11-29T00:00:00', '2022-11-30T00:00:00']}

# print(x == y)
